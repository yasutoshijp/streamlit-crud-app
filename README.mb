# ? Streamlit CRUDアプリ

これは、Streamlitを使って作成したシンプルなCRUD（作成、読み取り、更新、削除）アプリケーションです。入力されたデータはCSVファイルに保存されます。

**デプロイ先URL:** [ここにデプロイしたアプリのURLを貼り付けます]

---

## 概要

このアプリは、名前、年齢、メールアドレスといったユーザー情報を管理するためのものです。Streamlitの基本的な使い方と、セッション状態（`st.session_state`）を利用した画面遷移、ファイルへのデータ永続化を学習することを目的として作成しました。

## 主な機能

-   **データ登録**: フォームから新しいデータを登録できます。
-   **データ一覧表示**: 登録された全データを一覧で確認できます。
-   **データ編集**: 既存のデータを更新できます。
-   **データ削除**: データを削除できます（削除前に確認メッセージが表示されます）。
-   **データ永続化**: すべてのデータは `data.csv` ファイルに保存され、アプリを再起動してもデータが残ります。

## 技術スタック

-   Python
-   Streamlit
-   Pandas

## ローカル環境での実行方法

1.  **リポジトリをクローンまたはダウンロードします。**

2.  **必要なライブラリをインストールします。**
    ```bash
    pip install -r requirements.txt
    ```

3.  **Streamlitアプリを実行します。**
    ```bash
    streamlit run app.py
    ```

    ```bash
    # 自分の環境ではこちらのコマンドで実行する
    python -m streamlit run app.py
    ```

## デプロイ

このアプリはStreamlit Cloudにデプロイされています。ローカルで変更した内容を`main`ブランチにプッシュすると、自動的にデプロイが更新されます。

### 注意点
Streamlit Cloudの仕様上、CSVファイルへの保存方式では、アプリが長時間使われない場合や再デプロイ時にデータがリセットされる可能性があります。これは、デプロイ先のファイルシステムが一時的なものであるためです。

## 今後の課題（自分向けのTODO）

-   [ ] **Googleスプレッドシート連携**: Streamlit Cloud上でデータを完全に永続化するために、Googleスプレッドシートをデータベースとして利用する。
-   [ ] **入力値のバリデーション強化**: メールアドレスの形式が正しいか、より厳密にチェックする。年齢が数値として妥当かなど。
-   [ ] **検索・フィルタリング機能**: 一覧画面で、名前などでデータを検索できるようにする。
-   [ ] **UI/UXの改善**: Streamlitのテーマやレイアウトをカスタマイズして、より見やすいデザインにする。
-   [ ] **認証機能**: 特定のユーザーのみが使えるように、パスワード認証などを追加する。